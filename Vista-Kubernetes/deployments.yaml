apiVersion: apps/v1
kind: Deployment
metadata:
  name: vistadash-deploy
  labels:
    app: vistadash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vistadash
  template:
    metadata:
      labels:
        app: vistadash
    spec:
      containers:
      - name: vistadash
        image: docker.io/ramb0/vistadash
        command: ["/bin/bash"]
        args: ["-c","/home/git/YottaDB-dashboard/Vista-Kubernetes/vistaentry/entrypoint.sh"]

        env:
        - name: ydb_rel
          value: "j"
        ports:
        - containerPort: 9000
        - containerPort: 8083
        - containerPort: 8082
        livenessProbe:
          httpGet:
           path: /
           port: 9000
          initialDelaySeconds: 10
          periodSeconds: 3
        volumeMounts:
        - mountPath: "/home/project"
          name: vistavol
        - mountPath: "/home/git"
          name: gitvol
       - mountPath: "/home/nodevista/g"
          name: nodevistavol
      volumes:
      - name: vistavol
        persistentVolumeClaim:
          claimName: vista-pvc
      - name: nodevistavol
        persistentVolumeClaim:
          claimName: nodevista-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ide-deployment
  labels:
    app: ide
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ide
  template:
    metadata:
      labels:
        app: ide
    spec:
      containers:
      - name: ide
        image: docker.io/ramb0/theia-mumps:latest
        command: ["/bin/bash"]
        args: ["-c","/home/git/YottaDB-dashboard/Vista-Kubernetes/ideentry/entrypoint.sh"]
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
           path: /
           port: 3000
          initialDelaySeconds: 10
          periodSeconds: 3
        volumeMounts:
        - mountPath: "/home/project"
          name: vistavol
        - mountPath: "/home/git"
          name: gitvol
        - mountPath: "/home/theia/.theia"
          name: idevol
      volumes:
      - name: vistavol
        persistentVolumeClaim:
          claimName: vista-pvc
      - name: gitvol
        persistentVolumeClaim:
          claimName: git-pvc
     - name: idevol
        persistentVolumeClaim:
          claimName: ide-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  labels:
    app: prometheus
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: docker.io/bitnami/prometheus
        command: ["/bin/bash"]
        args: ["-c","/home/git/YottaDB-dashboard/Vista-Kubernetes/promentry/entrypoint.sh"]
        ports:
        - containerPort: 9090
        livenessProbe:
          httpGet:
           path: /
           port: 9090
          initialDelaySeconds: 10
          periodSeconds: 3
        volumeMounts:
        - mountPath: "/home/git"
          name: gitvol
      volumes:
      - name: gitvol
        persistentVolumeClaim:
          claimName: git-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deploy
  labels:
    app: grafana
spec:
  replicas: 2
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: docker.io/grafana/grafana
        command: ["/bin/bash"]
        args: ["-c","/home/git/YottaDB-dashboard/Vista-Kubernetes/grafentry/entrypoint.sh"]
        env:
        - name: GF_INSTALL_PLUGINS
          value: "yesoreyeram-infinity-datasource"
        ports:
        - containerPort: 3000
        livenessProbe:
          tcpSocket:
           port: 3000
          initialDelaySeconds: 180
          periodSeconds: 3
        volumeMounts:
        - mountPath: "/home/git"
          name: gitvol
        - mountPath: "/var/lib/grafana"
          name: grafanavol
      initContainers:
      - name: take-data-dir-ownership
        image: alpine:3
        command:
        - chown
        - -R
        - 472:472
        - /var/lib/grafana
        volumeMounts:
        - name: grafanavol
          mountPath: /var/lib/grafana 
      volumes:
      - name: gitvol
        persistentVolumeClaim:
          claimName: git-pvc
      - name: grafanavol
        persistentVolumeClaim:
          claimName: grafana-pvc


